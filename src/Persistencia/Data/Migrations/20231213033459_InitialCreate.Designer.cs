// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DbAppContext))]
    [Migration("20231213033459_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCiudad")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkDepartamentoId")
                        .HasColumnType("int")
                        .HasColumnName("FkDepartamentoId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("FkDepartamentoId");

                    b.ToTable("Ciudad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FkDepartamentoId = 1,
                            Nombre = "Ciudad1"
                        },
                        new
                        {
                            Id = 2,
                            FkDepartamentoId = 1,
                            Nombre = "Ciudad2"
                        },
                        new
                        {
                            Id = 3,
                            FkDepartamentoId = 2,
                            Nombre = "Ciudad3"
                        },
                        new
                        {
                            Id = 4,
                            FkDepartamentoId = 2,
                            Nombre = "Ciudad4"
                        },
                        new
                        {
                            Id = 5,
                            FkDepartamentoId = 3,
                            Nombre = "Ciudad5"
                        },
                        new
                        {
                            Id = 6,
                            FkDepartamentoId = 3,
                            Nombre = "Ciudad6"
                        },
                        new
                        {
                            Id = 7,
                            FkDepartamentoId = 4,
                            Nombre = "Ciudad7"
                        },
                        new
                        {
                            Id = 8,
                            FkDepartamentoId = 4,
                            Nombre = "Ciudad8"
                        },
                        new
                        {
                            Id = 9,
                            FkDepartamentoId = 5,
                            Nombre = "Ciudad9"
                        },
                        new
                        {
                            Id = 10,
                            FkDepartamentoId = 5,
                            Nombre = "Ciudad10"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDepartamento")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkPaisId")
                        .HasColumnType("int")
                        .HasColumnName("FkPaisId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("FkPaisId");

                    b.ToTable("Departamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FkPaisId = 1,
                            Nombre = "Departamento1"
                        },
                        new
                        {
                            Id = 2,
                            FkPaisId = 1,
                            Nombre = "Departamento2"
                        },
                        new
                        {
                            Id = 3,
                            FkPaisId = 2,
                            Nombre = "Departamento3"
                        },
                        new
                        {
                            Id = 4,
                            FkPaisId = 2,
                            Nombre = "Departamento4"
                        },
                        new
                        {
                            Id = 5,
                            FkPaisId = 3,
                            Nombre = "Departamento5"
                        },
                        new
                        {
                            Id = 6,
                            FkPaisId = 3,
                            Nombre = "Departamento6"
                        },
                        new
                        {
                            Id = 7,
                            FkPaisId = 4,
                            Nombre = "Departamento7"
                        },
                        new
                        {
                            Id = 8,
                            FkPaisId = 4,
                            Nombre = "Departamento8"
                        },
                        new
                        {
                            Id = 9,
                            FkPaisId = 5,
                            Nombre = "Departamento9"
                        },
                        new
                        {
                            Id = 10,
                            FkPaisId = 5,
                            Nombre = "Departamento10"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.DisponibilidadViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDisponibilidadViaje")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Disponibilidad")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar")
                        .HasColumnName("Disponibilidad");

                    b.HasKey("Id");

                    b.ToTable("DisponibilidadViaje", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponibilidad = "Si"
                        },
                        new
                        {
                            Id = 2,
                            Disponibilidad = "No"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEspecialidad")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Especialidad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Especialidad1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Especialidad2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Especialidad3"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Especialidad4"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Especialidad5"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Especialidad6"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Especialidad7"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Especialidad8"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Especialidad9"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Especialidad10"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.NivelIngles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdNivelIngles")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Nivel");

                    b.HasKey("Id");

                    b.ToTable("NivelIngles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nivel = "Básico"
                        },
                        new
                        {
                            Id = 2,
                            Nivel = "Básico-Intermedio"
                        },
                        new
                        {
                            Id = 3,
                            Nivel = "Intermedio"
                        },
                        new
                        {
                            Id = 4,
                            Nivel = "Intermedio-Avanzado"
                        },
                        new
                        {
                            Id = 5,
                            Nivel = "Avanzado"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPais")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Pais", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pais1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Pais2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Pais3"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Pais4"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Pais5"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Pais6"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Pais7"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Pais8"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Pais9"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Pais10"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPerfil")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<int>("FkDisponibilidadId")
                        .HasColumnType("int")
                        .HasColumnName("FkDisponibilidadId");

                    b.Property<int>("FkEspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("FkEspecialidadId");

                    b.Property<int>("FkNivelInglesId")
                        .HasColumnType("int")
                        .HasColumnName("FkNivelInglesId");

                    b.Property<int>("FkSeniorityId")
                        .HasColumnType("int")
                        .HasColumnName("FkSeniorityId");

                    b.Property<int>("FkUbicacionId")
                        .HasColumnType("int")
                        .HasColumnName("FkUbicacionId");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombres");

                    b.Property<int>("PretensionSalarialUSD")
                        .HasColumnType("int")
                        .HasColumnName("PretensionSalarialUSD");

                    b.HasKey("Id");

                    b.HasIndex("FkDisponibilidadId");

                    b.HasIndex("FkEspecialidadId");

                    b.HasIndex("FkNivelInglesId");

                    b.HasIndex("FkSeniorityId");

                    b.HasIndex("FkUbicacionId");

                    b.ToTable("Perfil", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Apellido1",
                            Email = "correo1@example.com",
                            FkDisponibilidadId = 1,
                            FkEspecialidadId = 1,
                            FkNivelInglesId = 1,
                            FkSeniorityId = 1,
                            FkUbicacionId = 1,
                            Nombres = "Nombre1",
                            PretensionSalarialUSD = 60000
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Apellido2",
                            Email = "correo2@example.com",
                            FkDisponibilidadId = 2,
                            FkEspecialidadId = 2,
                            FkNivelInglesId = 2,
                            FkSeniorityId = 2,
                            FkUbicacionId = 2,
                            Nombres = "Nombre2",
                            PretensionSalarialUSD = 7000
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Apellido3",
                            Email = "correo3@example.com",
                            FkDisponibilidadId = 1,
                            FkEspecialidadId = 3,
                            FkNivelInglesId = 3,
                            FkSeniorityId = 3,
                            FkUbicacionId = 3,
                            Nombres = "Nombre3",
                            PretensionSalarialUSD = 8000
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Apellido4",
                            Email = "correo4@example.com",
                            FkDisponibilidadId = 1,
                            FkEspecialidadId = 2,
                            FkNivelInglesId = 2,
                            FkSeniorityId = 1,
                            FkUbicacionId = 1,
                            Nombres = "Nombre4",
                            PretensionSalarialUSD = 5000
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "Apellido5",
                            Email = "correo5@example.com",
                            FkDisponibilidadId = 2,
                            FkEspecialidadId = 1,
                            FkNivelInglesId = 1,
                            FkSeniorityId = 2,
                            FkUbicacionId = 2,
                            Nombres = "Nombre5",
                            PretensionSalarialUSD = 5000
                        });
                });

            modelBuilder.Entity("Dominio.Entities.PerfilSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPerfilSolicitud")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkPerfilId")
                        .HasColumnType("int")
                        .HasColumnName("FkPerfilId");

                    b.Property<int>("FkSolicitudId")
                        .HasColumnType("int")
                        .HasColumnName("FkSolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("FkPerfilId");

                    b.HasIndex("FkSolicitudId");

                    b.ToTable("PerfilSolicitud", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FkPerfilId = 1,
                            FkSolicitudId = 1
                        },
                        new
                        {
                            Id = 2,
                            FkPerfilId = 2,
                            FkSolicitudId = 2
                        },
                        new
                        {
                            Id = 3,
                            FkPerfilId = 3,
                            FkSolicitudId = 3
                        },
                        new
                        {
                            Id = 4,
                            FkPerfilId = 1,
                            FkSolicitudId = 4
                        },
                        new
                        {
                            Id = 5,
                            FkPerfilId = 2,
                            FkSolicitudId = 5
                        },
                        new
                        {
                            Id = 6,
                            FkPerfilId = 3,
                            FkSolicitudId = 6
                        },
                        new
                        {
                            Id = 7,
                            FkPerfilId = 1,
                            FkSolicitudId = 7
                        },
                        new
                        {
                            Id = 8,
                            FkPerfilId = 2,
                            FkSolicitudId = 8
                        },
                        new
                        {
                            Id = 9,
                            FkPerfilId = 3,
                            FkSolicitudId = 9
                        },
                        new
                        {
                            Id = 10,
                            FkPerfilId = 1,
                            FkSolicitudId = 10
                        });
                });

            modelBuilder.Entity("Dominio.Entities.PerfilTecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPerfilTecnologia")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkPerfilId")
                        .HasColumnType("int")
                        .HasColumnName("FkPerfilId");

                    b.Property<int>("FkTecnologiaId")
                        .HasColumnType("int")
                        .HasColumnName("FkTecnologiaId");

                    b.HasKey("Id");

                    b.HasIndex("FkPerfilId");

                    b.HasIndex("FkTecnologiaId");

                    b.ToTable("PerfilTecnologia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FkPerfilId = 1,
                            FkTecnologiaId = 1
                        },
                        new
                        {
                            Id = 2,
                            FkPerfilId = 2,
                            FkTecnologiaId = 2
                        },
                        new
                        {
                            Id = 3,
                            FkPerfilId = 3,
                            FkTecnologiaId = 3
                        },
                        new
                        {
                            Id = 4,
                            FkPerfilId = 1,
                            FkTecnologiaId = 4
                        },
                        new
                        {
                            Id = 5,
                            FkPerfilId = 2,
                            FkTecnologiaId = 5
                        },
                        new
                        {
                            Id = 6,
                            FkPerfilId = 3,
                            FkTecnologiaId = 6
                        },
                        new
                        {
                            Id = 7,
                            FkPerfilId = 1,
                            FkTecnologiaId = 7
                        },
                        new
                        {
                            Id = 8,
                            FkPerfilId = 2,
                            FkTecnologiaId = 8
                        },
                        new
                        {
                            Id = 9,
                            FkPerfilId = 3,
                            FkTecnologiaId = 9
                        },
                        new
                        {
                            Id = 10,
                            FkPerfilId = 1,
                            FkTecnologiaId = 10
                        });
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRol");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Empleado"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Persona"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Seniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSeniority")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Seniority", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ssr+"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Jr+"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Mid+"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitud")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Empresa");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombres");

                    b.Property<double>("Telefono")
                        .HasColumnType("double")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Solicitud", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Apellido1",
                            Email = "correo1@example.com",
                            Empresa = "Empresa1",
                            Nombres = "Nombre1",
                            Telefono = 1234567890.0
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Apellido2",
                            Email = "correo2@example.com",
                            Empresa = "Empresa2",
                            Nombres = "Nombre2",
                            Telefono = 2345678901.0
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Apellido3",
                            Email = "correo3@example.com",
                            Empresa = "Empresa3",
                            Nombres = "Nombre3",
                            Telefono = 3456789012.0
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Apellido4",
                            Email = "correo4@example.com",
                            Empresa = "Empresa4",
                            Nombres = "Nombre4",
                            Telefono = 4567890123.0
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "Apellido5",
                            Email = "correo5@example.com",
                            Empresa = "Empresa5",
                            Nombres = "Nombre5",
                            Telefono = 5678901234.0
                        },
                        new
                        {
                            Id = 6,
                            Apellidos = "Apellido6",
                            Email = "correo6@example.com",
                            Empresa = "Empresa6",
                            Nombres = "Nombre6",
                            Telefono = 6789012345.0
                        },
                        new
                        {
                            Id = 7,
                            Apellidos = "Apellido7",
                            Email = "correo7@example.com",
                            Empresa = "Empresa7",
                            Nombres = "Nombre7",
                            Telefono = 7890123456.0
                        },
                        new
                        {
                            Id = 8,
                            Apellidos = "Apellido8",
                            Email = "correo8@example.com",
                            Empresa = "Empresa8",
                            Nombres = "Nombre8",
                            Telefono = 8901234567.0
                        },
                        new
                        {
                            Id = 9,
                            Apellidos = "Apellido9",
                            Email = "correo9@example.com",
                            Empresa = "Empresa9",
                            Nombres = "Nombre9",
                            Telefono = 9012345678.0
                        },
                        new
                        {
                            Id = 10,
                            Apellidos = "Apellido10",
                            Email = "correo10@example.com",
                            Empresa = "Empresa10",
                            Nombres = "Nombre10",
                            Telefono = 1234567890.0
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Tecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTecnologia")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Tecnologia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Java"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Python"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "C#"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "PHP"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Ruby"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Swift"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Kotlin"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "TypeScript"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "C++"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Vue.js"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "React"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Angular"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Node.js"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Django"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Flask"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Express.js"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Laravel"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Spring Boot"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Ruby on Rails"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = ".NET Core"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Go"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Vue.js"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "React Native"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Flutter"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "jQuery"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Bootstrap"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Sass"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "LESS"
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "Tailwind CSS"
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Rust"
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Dart"
                        },
                        new
                        {
                            Id = 33,
                            Nombre = "Elixir"
                        },
                        new
                        {
                            Id = 34,
                            Nombre = "Haskell"
                        },
                        new
                        {
                            Id = 35,
                            Nombre = "Scala"
                        },
                        new
                        {
                            Id = 36,
                            Nombre = "Erlang"
                        },
                        new
                        {
                            Id = 37,
                            Nombre = "R"
                        },
                        new
                        {
                            Id = 38,
                            Nombre = "Julia"
                        },
                        new
                        {
                            Id = 39,
                            Nombre = "Groovy"
                        },
                        new
                        {
                            Id = 40,
                            Nombre = "Clojure"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Usuario")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "britodelgado514@gmail.com",
                            Password = "1234",
                            Username = "Sicer Brito"
                        },
                        new
                        {
                            Id = 2,
                            Email = "angedeveloper@gmail.com",
                            Password = "12345",
                            Username = "Angelica Morales"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lisethtorres969@gmail.com",
                            Password = "123456",
                            Username = "Konny Alucemna"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRoles", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuariosRoles");
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.HasOne("Dominio.Entities.Departamento", "Departamentos")
                        .WithMany("Ciudades")
                        .HasForeignKey("FkDepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.HasOne("Dominio.Entities.Pais", "Paises")
                        .WithMany("Departamentos")
                        .HasForeignKey("FkPaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("Dominio.Entities.Perfil", b =>
                {
                    b.HasOne("Dominio.Entities.DisponibilidadViaje", "DisponibilidadViajes")
                        .WithMany("Perfiles")
                        .HasForeignKey("FkDisponibilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Especialidad", "Especialidades")
                        .WithMany("Perfiles")
                        .HasForeignKey("FkEspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.NivelIngles", "NivelDeIngles")
                        .WithMany("Perfiles")
                        .HasForeignKey("FkNivelInglesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Seniority", "Senioritys")
                        .WithMany("Perfiles")
                        .HasForeignKey("FkSeniorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ciudad", "Ciudades")
                        .WithMany("Perfiles")
                        .HasForeignKey("FkUbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudades");

                    b.Navigation("DisponibilidadViajes");

                    b.Navigation("Especialidades");

                    b.Navigation("NivelDeIngles");

                    b.Navigation("Senioritys");
                });

            modelBuilder.Entity("Dominio.Entities.PerfilSolicitud", b =>
                {
                    b.HasOne("Dominio.Entities.Perfil", "Perfiles")
                        .WithMany("PerfilSolicitudes")
                        .HasForeignKey("FkPerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Solicitud", "Solicitudes")
                        .WithMany("PerfilSolicitudes")
                        .HasForeignKey("FkSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfiles");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Dominio.Entities.PerfilTecnologia", b =>
                {
                    b.HasOne("Dominio.Entities.Perfil", "Perfiles")
                        .WithMany("PerfilTecnologias")
                        .HasForeignKey("FkPerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Tecnologia", "Tecnologias")
                        .WithMany("PerfilTecnologias")
                        .HasForeignKey("FkTecnologiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfiles");

                    b.Navigation("Tecnologias");
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.HasOne("Dominio.Entities.Usuario", "Usuario")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRoles", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", "Roles")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("Dominio.Entities.DisponibilidadViaje", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("Dominio.Entities.Especialidad", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("Dominio.Entities.NivelIngles", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Dominio.Entities.Perfil", b =>
                {
                    b.Navigation("PerfilSolicitudes");

                    b.Navigation("PerfilTecnologias");
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Dominio.Entities.Seniority", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("Dominio.Entities.Solicitud", b =>
                {
                    b.Navigation("PerfilSolicitudes");
                });

            modelBuilder.Entity("Dominio.Entities.Tecnologia", b =>
                {
                    b.Navigation("PerfilTecnologias");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
